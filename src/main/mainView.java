/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import aes128.AES128;
import java.awt.Color;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.filechooser.FileNameExtensionFilter;
import lsb.AudioSecrets;
import static lsb.AudioSecrets.LSBdecode;
import static lsb.AudioSecrets.LSBencode;
import static lsb.AudioSecrets.byteArrayToCharArray;
import static lsb.AudioSecrets.charArrayToByteArray;
import static lsb.AudioSecrets.getAudioData;
import static lsb.AudioSecrets.saveByteArrayAsAudioFile;





/**
 *
 * @author Panji-PC
 */
public class mainView extends javax.swing.JFrame {
    AES128 aes = new AES128();
    public String dekripsi="";
    public String outputFileWav=null;
    public Clip clip,clip2;
   
    boolean clickedPlay = true;

    public mainView() {
        
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bodyPanel = new javax.swing.JPanel();
        mainPanel = new javax.swing.JPanel();
        isiEncode = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textKunci1 = new javax.swing.JTextField();
        startEncode = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textareaEnkripsi = new javax.swing.JTextArea();
        OpenWAV = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        pathWAV = new javax.swing.JTextField();
        player = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        OriginalWAV = new javax.swing.JLabel();
        EncodedWAV = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        play1 = new javax.swing.JButton();
        stop1 = new javax.swing.JButton();
        play2 = new javax.swing.JButton();
        stop2 = new javax.swing.JButton();
        sizeOriginal = new javax.swing.JLabel();
        sizeEncoded = new javax.swing.JLabel();
        OpenWAV2 = new javax.swing.JButton();
        isiDecode = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        textKunci2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        hasilDekripsi = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        pathWAV1 = new javax.swing.JTextField();
        OpenWAV1 = new javax.swing.JButton();
        startDecode = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        isiPesan = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        menuPanel = new javax.swing.JPanel();
        LOGO = new javax.swing.JLabel();
        Judul = new javax.swing.JLabel();
        btnEncode = new javax.swing.JButton();
        btnDecode = new javax.swing.JButton();
        Judul1 = new javax.swing.JLabel();
        btnBantuan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WAV Watermarking");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(700, 600));
        setMinimumSize(new java.awt.Dimension(700, 600));
        setResizable(false);

        bodyPanel.setBackground(new java.awt.Color(51, 51, 51));
        bodyPanel.setDoubleBuffered(false);
        bodyPanel.setMaximumSize(new java.awt.Dimension(700, 600));
        bodyPanel.setMinimumSize(new java.awt.Dimension(700, 600));
        bodyPanel.setName(""); // NOI18N
        bodyPanel.setPreferredSize(new java.awt.Dimension(700, 500));

        mainPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        mainPanel.setMaximumSize(new java.awt.Dimension(437, 580));
        mainPanel.setMinimumSize(new java.awt.Dimension(437, 580));
        mainPanel.setPreferredSize(new java.awt.Dimension(437, 580));
        mainPanel.setLayout(new java.awt.CardLayout());

        isiEncode.setMaximumSize(new java.awt.Dimension(430, 535));
        isiEncode.setMinimumSize(new java.awt.Dimension(430, 535));
        isiEncode.setPreferredSize(new java.awt.Dimension(430, 535));

        jLabel1.setFont(new java.awt.Font("Stencil", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ENCODE - ENKRIPSI");

        jLabel3.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        jLabel3.setText("Teks :");

        jLabel4.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        jLabel4.setText("Kunci : (16 digit)");

        textKunci1.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N

        startEncode.setBackground(new java.awt.Color(153, 153, 153));
        startEncode.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        startEncode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/steganography.png"))); // NOI18N
        startEncode.setText(" Encode");
        startEncode.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        startEncode.setContentAreaFilled(false);
        startEncode.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        startEncode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startEncodeActionPerformed(evt);
            }
        });

        textareaEnkripsi.setColumns(20);
        textareaEnkripsi.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        textareaEnkripsi.setLineWrap(true);
        textareaEnkripsi.setRows(5);
        textareaEnkripsi.setWrapStyleWord(true);
        jScrollPane1.setViewportView(textareaEnkripsi);

        OpenWAV.setBackground(new java.awt.Color(204, 204, 204));
        OpenWAV.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        OpenWAV.setText("Open File...");
        OpenWAV.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        OpenWAV.setContentAreaFilled(false);
        OpenWAV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        OpenWAV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenWAVActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        jLabel12.setText("File Audio : (.wav)");

        pathWAV.setEditable(false);
        pathWAV.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N

        player.setBackground(new java.awt.Color(204, 204, 204));
        player.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        jLabel5.setText("ORIGINAL");

        jLabel6.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        jLabel6.setText("ENCODED");

        OriginalWAV.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        OriginalWAV.setText("-");
        OriginalWAV.setMaximumSize(new java.awt.Dimension(140, 19));

        EncodedWAV.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        EncodedWAV.setText("-");
        EncodedWAV.setMaximumSize(new java.awt.Dimension(160, 19));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        play1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/play.png"))); // NOI18N
        play1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                play1ActionPerformed(evt);
            }
        });

        stop1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/stop.png"))); // NOI18N
        stop1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stop1ActionPerformed(evt);
            }
        });

        play2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/play.png"))); // NOI18N
        play2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                play2ActionPerformed(evt);
            }
        });

        stop2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/stop.png"))); // NOI18N
        stop2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stop2ActionPerformed(evt);
            }
        });

        sizeOriginal.setText("0 KB");

        sizeEncoded.setText("0 KB");

        OpenWAV2.setBackground(new java.awt.Color(204, 204, 204));
        OpenWAV2.setFont(new java.awt.Font("Sylfaen", 0, 10)); // NOI18N
        OpenWAV2.setText("Open File...");
        OpenWAV2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        OpenWAV2.setContentAreaFilled(false);
        OpenWAV2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        OpenWAV2.setOpaque(true);
        OpenWAV2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenWAV2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout playerLayout = new javax.swing.GroupLayout(player);
        player.setLayout(playerLayout);
        playerLayout.setHorizontalGroup(
            playerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerLayout.createSequentialGroup()
                        .addGap(0, 38, Short.MAX_VALUE)
                        .addComponent(play1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(stop1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addComponent(jLabel5)
                    .addComponent(OriginalWAV, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sizeOriginal))
                .addGap(22, 22, 22)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(playerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerLayout.createSequentialGroup()
                        .addGroup(playerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(EncodedWAV, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(playerLayout.createSequentialGroup()
                                .addComponent(play2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stop2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(48, 48, 48))
                    .addGroup(playerLayout.createSequentialGroup()
                        .addGroup(playerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sizeEncoded, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerLayout.createSequentialGroup()
                        .addComponent(OpenWAV2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        playerLayout.setVerticalGroup(
            playerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerLayout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(playerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(playerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(playerLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(playerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(OriginalWAV, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EncodedWAV, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(playerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(play1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(playerLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(playerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(playerLayout.createSequentialGroup()
                                        .addComponent(sizeEncoded)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(playerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(play2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(stop2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(stop1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(playerLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(sizeOriginal)))
                .addGap(18, 18, 18)
                .addComponent(OpenWAV2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout isiEncodeLayout = new javax.swing.GroupLayout(isiEncode);
        isiEncode.setLayout(isiEncodeLayout);
        isiEncodeLayout.setHorizontalGroup(
            isiEncodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(isiEncodeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(isiEncodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(isiEncodeLayout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(isiEncodeLayout.createSequentialGroup()
                        .addGroup(isiEncodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, isiEncodeLayout.createSequentialGroup()
                                .addGroup(isiEncodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(isiEncodeLayout.createSequentialGroup()
                                .addComponent(pathWAV)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OpenWAV, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(isiEncodeLayout.createSequentialGroup()
                                .addGap(0, 7, Short.MAX_VALUE)
                                .addComponent(player, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12))
                            .addGroup(isiEncodeLayout.createSequentialGroup()
                                .addGroup(isiEncodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textKunci1)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(startEncode, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10))))
            .addGroup(isiEncodeLayout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        isiEncodeLayout.setVerticalGroup(
            isiEncodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(isiEncodeLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(isiEncodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathWAV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OpenWAV))
                .addGap(21, 21, 21)
                .addGroup(isiEncodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(startEncode, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(isiEncodeLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textKunci1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(60, 60, 60)
                .addComponent(player, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainPanel.add(isiEncode, "card2");

        isiDecode.setMaximumSize(new java.awt.Dimension(430, 535));
        isiDecode.setMinimumSize(new java.awt.Dimension(430, 535));
        isiDecode.setPreferredSize(new java.awt.Dimension(430, 535));

        jLabel8.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        jLabel8.setText("HASIL DEKRIPSI");

        textKunci2.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N

        hasilDekripsi.setEditable(false);
        hasilDekripsi.setColumns(20);
        hasilDekripsi.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        hasilDekripsi.setLineWrap(true);
        hasilDekripsi.setRows(5);
        hasilDekripsi.setWrapStyleWord(true);
        jScrollPane2.setViewportView(hasilDekripsi);

        jLabel10.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        jLabel10.setText("Kunci : (16 digit)");

        jLabel13.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        jLabel13.setText("File Audio [Encoded] : (.wav)");

        pathWAV1.setEditable(false);
        pathWAV1.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        pathWAV1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathWAV1ActionPerformed(evt);
            }
        });

        OpenWAV1.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        OpenWAV1.setText("Open File...");
        OpenWAV1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        OpenWAV1.setContentAreaFilled(false);
        OpenWAV1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        OpenWAV1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenWAV1ActionPerformed(evt);
            }
        });

        startDecode.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        startDecode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/steganography.png"))); // NOI18N
        startDecode.setText(" Decode");
        startDecode.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        startDecode.setContentAreaFilled(false);
        startDecode.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        startDecode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startDecodeActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        jLabel11.setText("ISI PESAN");

        isiPesan.setEditable(false);
        isiPesan.setColumns(20);
        isiPesan.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        isiPesan.setLineWrap(true);
        isiPesan.setRows(5);
        isiPesan.setWrapStyleWord(true);
        jScrollPane3.setViewportView(isiPesan);

        jLabel2.setFont(new java.awt.Font("Stencil", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("DECODE - DEKRIPSI");

        javax.swing.GroupLayout isiDecodeLayout = new javax.swing.GroupLayout(isiDecode);
        isiDecode.setLayout(isiDecodeLayout);
        isiDecodeLayout.setHorizontalGroup(
            isiDecodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(isiDecodeLayout.createSequentialGroup()
                .addGroup(isiDecodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(isiDecodeLayout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jLabel2))
                    .addGroup(isiDecodeLayout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(jLabel11))
                    .addGroup(isiDecodeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10)))
                .addGap(0, 80, Short.MAX_VALUE))
            .addGroup(isiDecodeLayout.createSequentialGroup()
                .addGroup(isiDecodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(isiDecodeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(isiDecodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(isiDecodeLayout.createSequentialGroup()
                                .addComponent(textKunci2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(startDecode, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, isiDecodeLayout.createSequentialGroup()
                                .addComponent(pathWAV1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OpenWAV1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(isiDecodeLayout.createSequentialGroup()
                        .addGroup(isiDecodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(isiDecodeLayout.createSequentialGroup()
                                .addGap(163, 163, 163)
                                .addComponent(jLabel8))
                            .addGroup(isiDecodeLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel13)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        isiDecodeLayout.setVerticalGroup(
            isiDecodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(isiDecodeLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addGap(35, 35, 35)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(isiDecodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathWAV1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OpenWAV1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(isiDecodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startDecode, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textKunci2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        mainPanel.add(isiDecode, "card3");

        menuPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));

        LOGO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo.png"))); // NOI18N

        Judul.setFont(new java.awt.Font("Stencil", 0, 24)); // NOI18N
        Judul.setText("WAV");

        btnEncode.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        btnEncode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Encode.png"))); // NOI18N
        btnEncode.setText("  ENCODE");
        btnEncode.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEncode.setContentAreaFilled(false);
        btnEncode.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEncode.setFocusPainted(false);
        btnEncode.setMaximumSize(new java.awt.Dimension(209, 61));
        btnEncode.setMinimumSize(new java.awt.Dimension(209, 61));
        btnEncode.setPreferredSize(new java.awt.Dimension(209, 61));
        btnEncode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEncodeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEncodeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnEncodeMousePressed(evt);
            }
        });
        btnEncode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncodeActionPerformed(evt);
            }
        });

        btnDecode.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        btnDecode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Decode.png"))); // NOI18N
        btnDecode.setText("  DECODE");
        btnDecode.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDecode.setContentAreaFilled(false);
        btnDecode.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDecode.setFocusable(false);
        btnDecode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDecodeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDecodeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnDecodeMousePressed(evt);
            }
        });
        btnDecode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecodeActionPerformed(evt);
            }
        });

        Judul1.setFont(new java.awt.Font("Stencil", 0, 24)); // NOI18N
        Judul1.setText("WATERMARKING");

        btnBantuan.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        btnBantuan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/info.png"))); // NOI18N
        btnBantuan.setText("  BANTUAN");
        btnBantuan.setActionCommand("");
        btnBantuan.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBantuan.setContentAreaFilled(false);
        btnBantuan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBantuan.setFocusable(false);
        btnBantuan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBantuanMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBantuanMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnBantuanMousePressed(evt);
            }
        });
        btnBantuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBantuanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(Judul)
                        .addGap(75, 75, 75))
                    .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                            .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnDecode, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEncode, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnBantuan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(10, 10, 10))
                        .addComponent(Judul1))
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(LOGO)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(LOGO, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Judul, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Judul1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(btnEncode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDecode, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(btnBantuan, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout bodyPanelLayout = new javax.swing.GroupLayout(bodyPanel);
        bodyPanel.setLayout(bodyPanelLayout);
        bodyPanelLayout.setHorizontalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        bodyPanelLayout.setVerticalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEncodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncodeActionPerformed
    //hapus
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        
    //tambah
        mainPanel.add(isiEncode);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_btnEncodeActionPerformed

    private void btnDecodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecodeActionPerformed
    //hapus
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        
    //tambah
        mainPanel.add(isiDecode);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_btnDecodeActionPerformed

    private void startEncodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startEncodeActionPerformed
        
        String data = textareaEnkripsi.getText();
        String key = textKunci1.getText();
        if(data.length()>85){
            showMessageDialog(null, "Input Teks lebih dari batas maksimal (85 Karakter)", "Error", ERROR_MESSAGE);
        }
        else if(data.length()==0 || key.length()==0||pathWAV.getText().length()==0){
            showMessageDialog(null, "Input Teks,File WAV dan Kunci tidak boleh kosong", "Error", ERROR_MESSAGE);
        }
        else if(key.length()!=16){
            showMessageDialog(null, "Panjang Kunci harus 16 byte", "Error", ERROR_MESSAGE);
        }else{
            JFileChooser sv1 = new JFileChooser();
            String path = "C:\\Program Files\\Digital Watermarking";
            sv1.setCurrentDirectory(new File(path));
//            sv1.setSelectedFile(new File("Enkripsi"));
//            sv1.setAcceptAllFileFilterUsed(false);
//            FileNameExtensionFilter filter = new FileNameExtensionFilter("Encrypted Files (.enc)","enc");
//            sv1.addChoosableFileFilter(filter);

//            int status = sv1.showSaveDialog(this);
            File f = new File("Enkripsi.txt.enc");
            
//            if (status == JFileChooser.APPROVE_OPTION) {
                try {
                   FileWriter fw = new FileWriter(f);
                    String text = aes.encrypt(data, key);
                    fw.write(text);
                    fw.close();
                    
                } catch (IOException ex) {
                showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
                }
//            }
//            if (status == JFileChooser.CANCEL_OPTION) {
//            // System.out.println("Cancelled");
//            }
//            if (status == JFileChooser.ERROR_OPTION) {
//             // System.out.println("Error");
//            }
            AudioSecrets lsb = new AudioSecrets();
            byte[] message = null;
//            File file = new File(sv1.getSelectedFile()+".txt.enc");
                try {
                        message = charArrayToByteArray( new Scanner(f).useDelimiter("\\Z").next().toCharArray() );
                        
                } catch (FileNotFoundException e) {
                        showMessageDialog(null, e, "Error", ERROR_MESSAGE);
                } 
                
                JFileChooser sv2 = new JFileChooser();
                sv2.setCurrentDirectory(new File(path));
                sv2.setAcceptAllFileFilterUsed(false);
                FileNameExtensionFilter filter1 = new FileNameExtensionFilter("WAV files (.wav)","wav");
                sv2.addChoosableFileFilter(filter1);
                sv2.setDialogTitle("Save Output Encoded Wav");
                int status1 = sv2.showSaveDialog(this);
                
           
            if (status1 == JFileChooser.APPROVE_OPTION) {
                outputFileWav = sv2.getSelectedFile().getName();
                
                if (!outputFileWav.endsWith(".wav"))
                {      
                        outputFileWav += ".wav";
                }
                byte[] audioData;
                String audioFileName = pathWAV.getText();
                audioData = getAudioData(audioFileName);
                int messageLengthInt = message.length;
                byte[] messageLength = lsb.bit_conversion(messageLengthInt);
                LSBencode(messageLength, audioData, 0);
                LSBencode(message, audioData, 32);
                saveByteArrayAsAudioFile(audioData, outputFileWav);
                JOptionPane.showMessageDialog(null, "File Audio Berhasil diEncode", "Succeed", INFORMATION_MESSAGE);
//                EncodedWAV.setText(outputFileWav);
//                double size = sv2.getSelectedFile().length()/1024;
//                sizeEncoded.setText(Double.toString(size)+" KB");
                
            }
            if (status1 == JFileChooser.CANCEL_OPTION) {
                
            }
            if (status1 == JFileChooser.ERROR_OPTION) {
             // System.out.println("Error");
            }
            
    

        }
    }//GEN-LAST:event_startEncodeActionPerformed

    
    private void OpenWAVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenWAVActionPerformed
        JFileChooser chooser = new JFileChooser();
        String path = "C:\\Program Files\\Digital Watermarking";
        chooser.setCurrentDirectory(new File(path));
        chooser.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("WAV Files (.wav)","wav");
        chooser.addChoosableFileFilter(filter);
        int status = chooser.showOpenDialog(this);
        if (status == JFileChooser.APPROVE_OPTION) {
                 File f = chooser.getSelectedFile();
                String filename = f.getAbsolutePath();
                pathWAV.setText(filename);
                OriginalWAV.setText(chooser.getSelectedFile().getName());
                double size = f.length()/1024;
                sizeOriginal.setText(Double.toString(size)+" KB");
                
                
        }
        if (status == JFileChooser.CANCEL_OPTION) {
            // System.out.println("Cancelled");
        }
        if (status == JFileChooser.ERROR_OPTION) {
             // System.out.println("Error");
        } 
    }//GEN-LAST:event_OpenWAVActionPerformed

    private void pathWAV1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathWAV1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pathWAV1ActionPerformed

    private void OpenWAV1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenWAV1ActionPerformed
        JFileChooser chooser = new JFileChooser();
        String path = "C:\\Program Files\\Digital Watermarking";
        chooser.setCurrentDirectory(new File(path));
        chooser.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("WAV Files (.wav)","wav");
        chooser.addChoosableFileFilter(filter);
        int status = chooser.showOpenDialog(this);
        if (status == JFileChooser.APPROVE_OPTION) {
                File f = chooser.getSelectedFile();
                String filename = f.getAbsolutePath();
                pathWAV1.setText(filename);
                
        }
        if (status == JFileChooser.CANCEL_OPTION) {
            // System.out.println("Cancelled");
        }
        if (status == JFileChooser.ERROR_OPTION) {
             // System.out.println("Error");
        } 
    }//GEN-LAST:event_OpenWAV1ActionPerformed

    private void startDecodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startDecodeActionPerformed
        String key = textKunci2.getText();
        if(pathWAV1.getText().length()==0||key.length()==0){
            showMessageDialog(null, "File WAV dan Kunci tidak boleh kosong", "Error", ERROR_MESSAGE);
        }else if(key.length()!=16){
            showMessageDialog(null, "Panjang Kunci harus 16 byte", "Error", ERROR_MESSAGE);
        }
        else{
        String audioToDecode = pathWAV1.getText();
        byte[] audioEncoded = getAudioData(audioToDecode);
        byte[] decryptedData = LSBdecode(audioEncoded);
        String message = new String( byteArrayToCharArray(decryptedData) );
        String outputName = "EnkripsiDecode.txt.enc";
        
        try {
           BufferedWriter writer = new BufferedWriter(new FileWriter(outputName));
           writer.write(message);
           writer.close();
        } catch (IOException ex) {
            showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
        }
       String data = message;
       if(data.length()==0){
           showMessageDialog(null, "File bukan Stego Audio", "Error", ERROR_MESSAGE);
       }else{
         
       
            JFileChooser sv1 = new JFileChooser();
            String path = "C:\\Program Files\\Digital Watermarking";
            sv1.setCurrentDirectory(new File(path));
//            sv1.setSelectedFile(new File("Dekripsi"));
//            sv1.setAcceptAllFileFilterUsed(false);
//            FileNameExtensionFilter filter = new FileNameExtensionFilter("Decrypted Files (.dec)","dec");
//            sv1.addChoosableFileFilter(filter);
//            int status = sv1.showSaveDialog(this);
            File f = new File("Dekripsi.txt.enc");
//            if (status == JFileChooser.APPROVE_OPTION) {
                try {
                    FileWriter fw = new FileWriter(f);
//                    String content = new String(Files.readAllBytes(Paths.get(data)), StandardCharsets.UTF_8);
                    String text = aes.decrypt(data,key );
                    fw.write(text);
                    fw.close();
                    hasilDekripsi.setText(text);
                    isiPesan.setText(message);
                    JOptionPane.showMessageDialog(null, "File berhasil didecode", "Succeed", INFORMATION_MESSAGE);
                } catch (IOException ex) {
                showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
                }
            }
//            }
//            if (status == JFileChooser.CANCEL_OPTION) {
//            // System.out.println("Cancelled");
//            }
//            if (status == JFileChooser.ERROR_OPTION) {
//             // System.out.println("Error");
//            }
       }        
    }//GEN-LAST:event_startDecodeActionPerformed

    private void play1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_play1ActionPerformed
        playMusic(pathWAV.getText());

    }//GEN-LAST:event_play1ActionPerformed

    private void play2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_play2ActionPerformed
        playMusic2(outputFileWav);
    }//GEN-LAST:event_play2ActionPerformed

    private void stop1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stop1ActionPerformed
        clip.stop();
    }//GEN-LAST:event_stop1ActionPerformed

    private void stop2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stop2ActionPerformed
        clip2.stop();
    }//GEN-LAST:event_stop2ActionPerformed

    private void btnBantuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBantuanActionPerformed
        bantuan bantu = new bantuan();
        bantu.setVisible(true);
    }//GEN-LAST:event_btnBantuanActionPerformed

    private void btnEncodeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEncodeMouseEntered
        btnEncode.setBackground(new Color(50,50,50));
        btnEncode.setOpaque(false);
    }//GEN-LAST:event_btnEncodeMouseEntered

    private void btnEncodeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEncodeMouseExited
        btnEncode.setBackground(new Color(240,240,240));
    }//GEN-LAST:event_btnEncodeMouseExited

    private void btnDecodeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDecodeMouseEntered
        btnDecode.setBackground(new Color(50,50,50));
        btnDecode.setOpaque(false);
    }//GEN-LAST:event_btnDecodeMouseEntered

    private void btnDecodeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDecodeMouseExited
         btnDecode.setBackground(new Color(240,240,240));
    }//GEN-LAST:event_btnDecodeMouseExited

    private void btnBantuanMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBantuanMouseEntered
        btnBantuan.setBackground(new Color(50,50,50));
        btnBantuan.setOpaque(false);
    }//GEN-LAST:event_btnBantuanMouseEntered

    private void btnBantuanMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBantuanMouseExited
       btnBantuan.setBackground(new Color(240,240,240));
    }//GEN-LAST:event_btnBantuanMouseExited

    private void btnEncodeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEncodeMousePressed
        btnEncode.setBackground(new Color(225,225,225));
        btnEncode.setOpaque(true);
    }//GEN-LAST:event_btnEncodeMousePressed

    private void btnDecodeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDecodeMousePressed
        btnDecode.setBackground(new Color(225,225,225));
        btnDecode.setOpaque(true);
    }//GEN-LAST:event_btnDecodeMousePressed

    private void btnBantuanMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBantuanMousePressed
        btnBantuan.setBackground(new Color(225,225,225));
        btnBantuan.setOpaque(true);
    }//GEN-LAST:event_btnBantuanMousePressed

    private void OpenWAV2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenWAV2ActionPerformed
        JFileChooser chooser = new JFileChooser();
        String path = "C:\\Program Files\\Digital Watermarking";
        chooser.setCurrentDirectory(new File(path));
        chooser.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("WAV Files (.wav)","wav");
        chooser.addChoosableFileFilter(filter);
        int status = chooser.showOpenDialog(this);
        if (status == JFileChooser.APPROVE_OPTION) {
                 File f = chooser.getSelectedFile();
                String filename = f.getAbsolutePath();
                outputFileWav = chooser.getSelectedFile().getName();
                EncodedWAV.setText(outputFileWav);
                double size = f.length()/1024;
                sizeEncoded.setText(Double.toString(size)+" KB");
                
                
        }
        if (status == JFileChooser.CANCEL_OPTION) {
            // System.out.println("Cancelled");
        }
        if (status == JFileChooser.ERROR_OPTION) {
             // System.out.println("Error");
        } 
    }//GEN-LAST:event_OpenWAV2ActionPerformed
   

    void playMusic(String musicLocation) {
     
        try{
            
            File musicPath = new File(musicLocation);
            if(musicPath.exists()){
                AudioInputStream audioInput = AudioSystem.getAudioInputStream(musicPath);
                clip = AudioSystem.getClip();
                clip.open(audioInput);
                clip.start();
                long clipTimePosition = clip.getMicrosecondPosition();
            }else{
                JOptionPane.showMessageDialog(null, "Error WAV tidak ditemukan","error",ERROR_MESSAGE);
            }
        }catch(Exception e){
            showMessageDialog(null, e, "Error", ERROR_MESSAGE);
        }
    
    }
     
    void playMusic2(String musicLocation) {
        if(EncodedWAV.getText().equals("-")){
            JOptionPane.showMessageDialog(null, "Error WAV tidak ditemukan","error",ERROR_MESSAGE);
        }else{
        try{
            File musicPath = new File(musicLocation);
            if(musicPath.exists()){
                AudioInputStream audioInput = AudioSystem.getAudioInputStream(musicPath);
                clip2 = AudioSystem.getClip();
                clip2.open(audioInput);
                clip2.start();
                long clipTimePosition = clip2.getMicrosecondPosition();
            }else{
                JOptionPane.showMessageDialog(null, "Error WAV tidak ditemukan","error",ERROR_MESSAGE);
            }
        }catch(Exception e){
           showMessageDialog(null, e, "Error", ERROR_MESSAGE);
        }
        }
    
    }
    
  
    /**
     * @param args the command line arguments
     */   

    
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel EncodedWAV;
    private javax.swing.JLabel Judul;
    private javax.swing.JLabel Judul1;
    private javax.swing.JLabel LOGO;
    private javax.swing.JButton OpenWAV;
    private javax.swing.JButton OpenWAV1;
    private javax.swing.JButton OpenWAV2;
    private javax.swing.JLabel OriginalWAV;
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JButton btnBantuan;
    private javax.swing.JButton btnDecode;
    private javax.swing.JButton btnEncode;
    private javax.swing.JTextArea hasilDekripsi;
    private javax.swing.JPanel isiDecode;
    private javax.swing.JPanel isiEncode;
    private javax.swing.JTextArea isiPesan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JTextField pathWAV;
    private javax.swing.JTextField pathWAV1;
    private javax.swing.JButton play1;
    private javax.swing.JButton play2;
    private javax.swing.JPanel player;
    private javax.swing.JLabel sizeEncoded;
    private javax.swing.JLabel sizeOriginal;
    private javax.swing.JButton startDecode;
    private javax.swing.JButton startEncode;
    private javax.swing.JButton stop1;
    private javax.swing.JButton stop2;
    private javax.swing.JTextField textKunci1;
    private javax.swing.JTextField textKunci2;
    private javax.swing.JTextArea textareaEnkripsi;
    // End of variables declaration//GEN-END:variables
}
